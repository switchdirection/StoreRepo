@using Application.Games.Model;
@model GameViewModel;

@{
    ViewData["Title"] = "Main Page";
}


@if (TempData["DropPasswordSuccess"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mt-3 fixed-top" role="alert" style="z-index: 1050; max-width: 300px; position: fixed; top: 20px; left: 50%; transform: translateX(-50%);">
        @TempData["DropPasswordSuccess"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["DropPasswordError"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mt-3 fixed-top" role="alert" style="z-index: 1050; max-width: 300px; position: fixed; top: 20px; left: 50%; transform: translateX(-50%);">
        @TempData["DropPasswordError"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


<div class="text-center" style="padding-top: 80px;">
    <h1 class="display-4">Главная страница магазина</h1>
</div>

<div class="container-fluid" >
    <div class="row">
        <!-- Левая колонка для фильтров -->
        <div class="col-md-3">
            <div class="p-3 border rounded shadow-sm bg-light">
                <h4>Фильтры</h4>
                <form id="filterForm" method="get" action="@Url.Action("Index", "Home")">
                    <!-- Поиск -->
                    <div class="mb-3">
                        <label for="search" class="form-label">Поиск</label>
                        <input type="text" id="search" name="search" class="form-control" placeholder="Введите название игры">
                    </div>

                    <!-- Категории -->
                    <div class="mb-3">
                        <label for="categories" class="form-label">Категории</label>
                        <div id="categories" name="categories">
                            @foreach (var category in Model.Filters.Categories)
                            {
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="@category.CategoryId" id="category_@category.CategoryId" name="categories"
                                    @(Context.Request.Query["categories"].ToString().Contains(category.CategoryId.ToString()) ? "checked" : "")>
                                    <label class="form-check-label" for="category_@category.CategoryId">
                                        @category.CategoryName
                                    </label>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Цена -->
                    <div class="mb-3">
                        <label for="priceRange" class="form-label">Цена</label>
                        <div class="d-flex align-items-center">
                            <input type="number" id="minPrice" name="minPrice" class="form-control me-2" placeholder="Мин" min="0">
                            <input type="number" id="maxPrice" name="maxPrice" class="form-control" placeholder="Макс" min="0">
                        </div>
                    </div>

                    <!-- Разработчики -->
                    <div class="mb-3">
                        <label for="developers" class="form-label">Разработчики</label>
                        <div id="developers" name="developers">
                            @foreach (var developer in Model.Filters.Developers)
                            {
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="@developer.DeveloperId" id="developer_@developer.DeveloperId" name="developers"
                                    @(Context.Request.Query["developers"].ToString().Contains(developer.DeveloperId.ToString()) ? "checked" : "")>
                                    <label class="form-check-label" for="developer_@developer.DeveloperId">
                                        @developer.DeveloperName
                                    </label>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Платформы -->
                    <div class="mb-3">
                        <label for="platforms" class="form-label">Платформы</label>
                        <div id="platforms" name="platforms">
                            @foreach (var platform in Model.Filters.Platforms)
                            {
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="@platform.PlatformId" id="platform_@platform.PlatformId" name="platforms"
                                    @(Context.Request.Query["platforms"].ToString().Contains(platform.PlatformId.ToString()) ? "checked" : "")>
                                    <label class="form-check-label" for="platform_@platform.PlatformId">
                                        @platform.PlatformName
                                    </label>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Издатели -->
                    <div class="mb-3">
                        <label for="publishers" class="form-label">Издатели</label>
                        <div id="publishers" name="publishers">
                            @foreach (var publisher in Model.Filters.Publishers)
                            {
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="@publisher.PublisherId" id="publisher_@publisher.PublisherId" name="publishers"
                                    @(Context.Request.Query["publishers"].ToString().Contains(publisher.PublisherId.ToString()) ? "checked" : "")>
                                    <label class="form-check-label" for="publisher_@publisher.PublisherId">
                                        @publisher.PublisherName
                                    </label>
                                </div>
                            }
                        </div>
                    </div>

                    <button type="submit" class="btn btn-primary w-100">Применить фильтры</button>
                </form>
                <form asp-controller="Home" asp-action="index" class="form-inline">
                    <button type="submit" class="btn btn-primary w-100" style="margin-top: 5px;">Сбросить фильтры</button>
                </form>
            </div>
        </div>

        <!-- Правая колонка для карточек игр -->
        <div class="col-md-9">
            <div class="d-flex flex-wrap justify-content-start">
                @if(Model.Games.Result != null && Model.Games.Result.Any())
                {
                    @foreach (var game in Model.Games.Result)
                    {
                        <div class="card m-2" style="width: 14rem;">
                            <img src="@game.ImageUrl" class="card-img-top" alt="@game.Title" style="cursor: pointer;" onclick="openModal(@game.Id)">
                            <div class="card-body">
                                <h5 class="card-title">@game.Title</h5>
                                <p class="card-text">@game.Price.ToString("C")</p>
                                @if (User?.Identity?.IsAuthenticated == true)
                                {
                                    <button class="btn btn-primary" style="cursor: pointer;" onclick="addToCart('@game.Id')">В корзину</button>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#loginModal" style="margin-right: 20px;">
                                        Корзина
                                    </button>
                                }
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="d-flex justify-content-center w-100" style="height: 100vh; color: lightgray;">
                        <h2 class="text-center">Список игр пуст</h2>
                    </div>
                }

            </div>
        </div>
    </div>
</div>


<!-- Модальное окно -->
<div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content" id="productModalContent">
        </div>
    </div>
</div>

<!-- Модальное окно для входа -->
<div class="modal fade" id="loginModal" tabindex="-1" role="dialog" aria-labelledby="loginModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="loginModalLabel">Вход</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="loginFormContainer"></div>
            </div>
        </div>
    </div>
</div>


<!-- Пагинация -->
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        @if (Model.Games.PageNumber > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.Games.PageNumber - 1 })">Назад</a>
            </li>
        }

        <!-- Показ нескольких номеров страниц -->
        @{
            var pagesCount = Math.Ceiling((decimal)Model.Games.TotalCount / Model.Games.PageSize);
        }
        @for (var i = 1; i <= pagesCount; i++)
        {
            if (i == Model.Games.PageNumber)
            {
                <li class="page-item active">
                    <span class="page-link" href="@Url.Action("Index", new { pageNumber = i })">@i</span>
                </li>
            }
            else if (i <= 3 || i == Model.Games.TotalCount || (i >= Model.Games.PageNumber - 2 && i <= Model.Games.PageNumber + 2))
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = i })">@i</a>
                </li>
            }
            else if (i == 4)
            {
                <li class="page-item">
                    <span class="page-link">...</span>
                </li>
            }
            else if (i == pagesCount)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = i })">@i</a>
                </li>
            }
        }

        @if (Model.Games.PageNumber < pagesCount)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.Games.PageNumber + 1 })">Вперед</a>
            </li>
        }
    </ul>
</nav>




<script>
    function openModal(gameId) {
        $("#productModalContent").load('/Home/GetGameDetails?gameId=' + gameId, function (response, status, xhr) {
            if (status === "error") {
                console.error("Ошибка загрузки содержимого:", xhr.status, xhr.statusText);
                alert("Не удалось загрузить данные. Попробуйте позже.");
            } else {
                $('#productModal').modal('show');
            }
        });
    }


    $(document).ready(function () {
        // Обработчик события при нажатии на кнопку
        $('#loginModal').on('show.bs.modal', function () {
            // Выполнение AJAX-запроса к методу Login в контроллере Account
            $.ajax({
                url: '@Url.Action("Login", "Account")', // URL к методу контроллера
                type: 'GET',
                success: function (data) {
                    // Вставка полученного HTML в контейнер модального окна
                    $('#loginFormContainer').html(data);
                },
                error: function () {
                    console.error("Ошибка загрузки формы входа:", status, error);
                    $('#loginFormContainer').html('<p class="text-danger">Ошибка загрузки формы входа.</p>');
                }
            });
        });
    });
    function changeMainImage(imageUrl) {
        document.getElementById("mainImage").src = imageUrl;
    }

    function addToCart(gameId) {
        fetch('/Home/AddToCart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ gameId: gameId }),
        })
            .then(response => {
                if (response.ok) {
                    alert("Товар успешно добавлен в корзину!")
                } else {
                    alert("Товар не был добавлен в корзину!")
                }
            })
            .catch(error => {
                console.error('Ошибка:', error);
            });
    }

    document.addEventListener("DOMContentLoaded", function () {
        setTimeout(function () {
            let alert = document.querySelector('.alert');
            if (alert) alert.classList.remove('show');
        }, 5000);
    });
</script>